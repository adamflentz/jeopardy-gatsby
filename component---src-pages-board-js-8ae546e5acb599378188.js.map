{"version":3,"sources":["webpack:///./src/components/question.js","webpack:///./src/components/category.js","webpack:///./src/pages/board.js","webpack:///./node_modules/@babel/runtime/helpers/esm/readOnlyError.js"],"names":["useStyles","makeStyles","gameButton","fontSize","question","Question","props","classes","React","open","setOpen","className","Button","color","onClick","value","dailyDouble","toString","category","display","flexDirection","padding","Category","dailyDoublesArray","dailyDoubles","filter","element","doubleValue","categoryNumber","map","questionNumber","undefined","some","categoryTitle","answers","menu","height","margin","fontFamily","body","justifyContent","alignContent","backgroundImage","backgroundRepeat","backgroundSize","textAlign","h1","gameBoard","getRandomInt","Math","floor","random","dailyDouble1","dailyDouble2","Board","join","Jeopardy","rounds","categories","_readOnlyError","name","TypeError"],"mappings":"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","file":"component---src-pages-board-js-8ae546e5acb599378188.js","sourcesContent":["import * as React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\n\nconst useStyles = makeStyles({\n  gameButton: { fontSize: \"20px\" },\n  question: {},\n});\n\nexport default function Question(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <div className={classes.question}>\n      <Button\n        className={classes.gameButton}\n        color=\"primary\"\n        onClick={handleOpen}\n      >\n        {props.value}\n        {props.dailyDouble.toString()}\n      </Button>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Question from \"./question.js\";\n\nconst useStyles = makeStyles({\n  category: { display: \"flex\", flexDirection: \"column\", padding: \"20px\" },\n});\n\nexport default function Category(props) {\n  const classes = useStyles();\n\n  const checkDailyDouble = (doubleValue) => {\n    return (\n      doubleValue <= props.categoryNumber * 5 &&\n      doubleValue > (props.categoryNumber - 1) * 5\n    );\n  };\n\n  const dailyDoublesArray = props.dailyDoubles\n    .filter((element) => {\n      return checkDailyDouble(element);\n    })\n    .map((element) => {\n      return element % 5;\n    });\n\n  const dailyDouble = (questionNumber) => {\n    if (dailyDoublesArray !== undefined) {\n      return dailyDoublesArray.some(\n        (element) => questionNumber % 5 === element\n      );\n    }\n    return false;\n  };\n\n  return (\n    <div className={classes.category}>\n      <h3>{props.category.categoryTitle}</h3>\n      <Question\n        question={props.category.answers[0]}\n        value=\"100\"\n        dailyDouble={dailyDouble(1)}\n      ></Question>\n      <Question\n        question={props.category.answers[1]}\n        value=\"200\"\n        dailyDouble={dailyDouble(2)}\n      ></Question>\n      <Question\n        question={props.category.answers[2]}\n        value=\"300\"\n        dailyDouble={dailyDouble(3)}\n      ></Question>\n      <Question\n        question={props.category.answers[3]}\n        value=\"400\"\n        dailyDouble={dailyDouble(4)}\n      ></Question>\n      <Question\n        question={props.category.answers[4]}\n        value=\"500\"\n        dailyDouble={dailyDouble(5)}\n      ></Question>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Category from \"../components/category.js\";\nimport Jeopardy from \"../templates/jeopardy\";\n\nimport \"fontsource-roboto\";\n\n// styles\nconst useStyles = makeStyles({\n  menu: {\n    height: \"auto\",\n    margin: \"auto\",\n    fontFamily: \"Roboto\",\n  },\n  body: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    height: \"100vh\",\n    backgroundImage: \"url('../images/splashBase.jpg')\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"100% 100%\",\n    textAlign: \"center\",\n  },\n  h1: {},\n  gameBoard: { display: \"flex\" },\n});\n\nconst getRandomInt = () => {\n  return Math.floor(Math.random() * Math.floor(25)) + 1;\n};\n\nconst dailyDouble1 = getRandomInt();\nconst dailyDouble2 = getRandomInt();\nwhile (dailyDouble2 === dailyDouble1) {\n  dailyDouble2 = getRandomInt();\n}\n\nconst dailyDoubles = [dailyDouble1, dailyDouble2];\n\n// markup\nconst Board = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.body}>\n      <title>Game Board</title>\n      <div className={classes.menu}>\n        <h1>Jeopardy Title</h1>\n        <h3>{dailyDoubles.join()}</h3>\n        <div className={classes.gameBoard}>\n          <Category\n            className={classes.category}\n            category={Jeopardy.rounds[0].categories[0]}\n            categoryNumber=\"1\"\n            dailyDoubles={dailyDoubles}\n          />\n          <Category\n            className={classes.category}\n            category={Jeopardy.rounds[0].categories[1]}\n            categoryNumber=\"2\"\n            dailyDoubles={dailyDoubles}\n          />\n          <Category\n            className={classes.category}\n            category={Jeopardy.rounds[0].categories[2]}\n            categoryNumber=\"3\"\n            dailyDoubles={dailyDoubles}\n          />\n          <Category\n            className={classes.category}\n            category={Jeopardy.rounds[0].categories[3]}\n            categoryNumber=\"4\"\n            dailyDoubles={dailyDoubles}\n          />\n          <Category\n            className={classes.category}\n            category={Jeopardy.rounds[0].categories[4]}\n            categoryNumber=\"5\"\n            dailyDoubles={dailyDoubles}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Board;\n","export default function _readOnlyError(name) {\n  throw new TypeError(\"\\\"\" + name + \"\\\" is read-only\");\n}"],"sourceRoot":""}