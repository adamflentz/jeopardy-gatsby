{"version":3,"sources":["webpack:///./src/pages/upload.js","webpack:///./src/components/question.js","webpack:///./src/components/category.js","webpack:///./node_modules/@babel/runtime/helpers/esm/readOnlyError.js"],"names":["useStyles","makeStyles","menu","height","margin","fontFamily","body","display","justifyContent","alignContent","backgroundImage","backgroundRepeat","backgroundSize","textAlign","h1","gameBoard","getRandomInt","Math","floor","random","dailyDouble1","dailyDouble2","Upload","Question","props","classes","gameButton","fontSize","dailyDouble","question","React","open","setOpen","className","Button","color","onClick","value","category","flexDirection","padding","Category","dailyDoublesArray","dailyDoubles","filter","element","doubleValue","categoryNumber","map","questionNumber","undefined","some","categoryTitle","answers","_readOnlyError","name","TypeError"],"mappings":"i5NAkCA,I,wCA1BMA,G,8BAAYC,YAAW,CAC3BC,KAAM,CACJC,OAAQ,OACRC,OAAQ,OACRC,WAAY,UAEdC,KAAM,CACJC,QAAS,OACTC,eAAgB,SAChBC,aAAc,SACdN,OAAQ,QACRO,gBAAiB,kCACjBC,iBAAkB,YAClBC,eAAgB,YAChBC,UAAW,UAEbC,GAAI,GACJC,UAAW,CAAER,QAAS,WAGlBS,EAAe,WACnB,OAAOC,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAM,KAAO,GAGhDE,EAAeJ,IACfK,EAAeL,IACdK,IAAiBD,GACV,4BAAZC,EAAeL,IAeFM,UATA,WACGtB,IAChB,OACE,2BACE,4C,4GCxCS,SAASuB,EAASC,GAC/B,IAMMC,EANYxB,YAAW,CAC3ByB,WAAY,CACVC,SAAUH,EAAMI,YAAc,SAAW,QAE3CC,SAAU,IAEI7B,GAPsB,EAQd8B,YAAe,GAAhCC,EAR+B,KAQzBC,EARyB,KActC,OACE,uBAAKC,UAAWR,EAAQI,UACtB,gBAACK,EAAA,EAAD,CACED,UAAWR,EAAQC,WACnBS,MAAM,UACNC,QATa,WACjBJ,GAASD,KAUJP,EAAMa,QCtBf,IAAMrC,EAAYC,YAAW,CAC3BqC,SAAU,CAAE/B,QAAS,OAAQgC,cAAe,SAAUC,QAAS,UAGlD,SAASC,EAASjB,GAC/B,IAAMC,EAAUzB,IASV0C,EAAoBlB,EAAMmB,aAC7BC,QAAO,SAACC,GACP,OATsBC,EASED,IAPc,EAAvBrB,EAAMuB,gBACrBD,EAA2C,GAA5BtB,EAAMuB,eAAiB,GAHjB,IAACD,KAWvBE,KAAI,SAACH,GACJ,OAAOA,EAAU,KAGfjB,EAAc,SAACqB,GACnB,YAA0BC,IAAtBR,GACKA,EAAkBS,MACvB,SAACN,GAAD,OAAaI,EAAiB,IAAMJ,MAM1C,OACE,uBAAKZ,UAAWR,EAAQa,UACtB,0BAAKd,EAAMc,SAASc,eACpB,gBAAC7B,EAAD,CACEM,SAAUL,EAAMc,SAASe,QAAQ,GACjChB,MAAM,MACNT,YAAaA,EAAY,KAE3B,gBAACL,EAAD,CACEM,SAAUL,EAAMc,SAASe,QAAQ,GACjChB,MAAM,MACNT,YAAaA,EAAY,KAE3B,gBAACL,EAAD,CACEM,SAAUL,EAAMc,SAASe,QAAQ,GACjChB,MAAM,MACNT,YAAaA,EAAY,KAE3B,gBAACL,EAAD,CACEM,SAAUL,EAAMc,SAASe,QAAQ,GACjChB,MAAM,MACNT,YAAaA,EAAY,KAE3B,gBAACL,EAAD,CACEM,SAAUL,EAAMc,SAASe,QAAQ,GACjChB,MAAM,MACNT,YAAaA,EAAY,Q,kCC7DlB,SAAS0B,EAAeC,GACrC,MAAM,IAAIC,UAAU,IAAOD,EAAO,kBADpC","file":"component---src-pages-upload-js-b8e4cfda73507945eb92.js","sourcesContent":["import * as React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Category from \"../components/category.js\";\nimport Jeopardy from \"../templates/jeopardy\";\n\nimport \"fontsource-roboto\";\n\n// styles\nconst useStyles = makeStyles({\n  menu: {\n    height: \"auto\",\n    margin: \"auto\",\n    fontFamily: \"Roboto\",\n  },\n  body: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    height: \"100vh\",\n    backgroundImage: \"url('../images/splashBase.jpg')\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"100% 100%\",\n    textAlign: \"center\",\n  },\n  h1: {},\n  gameBoard: { display: \"flex\" },\n});\n\nconst getRandomInt = () => {\n  return Math.floor(Math.random() * Math.floor(25)) + 1;\n};\n\nconst dailyDouble1 = getRandomInt();\nconst dailyDouble2 = getRandomInt();\nwhile (dailyDouble2 === dailyDouble1) {\n  dailyDouble2 = getRandomInt();\n}\n\nconst dailyDoubles = [dailyDouble1, dailyDouble2];\n\n// markup\nconst Upload = () => {\n  const classes = useStyles();\n  return (\n    <div>\n      <h1>Upload Page</h1>\n    </div>\n  );\n};\n\nexport default Upload;\n","import * as React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\n\nexport default function Question(props) {\n  const useStyles = makeStyles({\n    gameButton: {\n      fontSize: props.dailyDouble ? \"1.2rem\" : \"1rem\",\n    },\n    question: {},\n  });\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <div className={classes.question}>\n      <Button\n        className={classes.gameButton}\n        color=\"primary\"\n        onClick={handleOpen}\n      >\n        {props.value}\n      </Button>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Question from \"./question.js\";\n\nconst useStyles = makeStyles({\n  category: { display: \"flex\", flexDirection: \"column\", padding: \"20px\" },\n});\n\nexport default function Category(props) {\n  const classes = useStyles();\n\n  const checkDailyDouble = (doubleValue) => {\n    return (\n      doubleValue <= props.categoryNumber * 5 &&\n      doubleValue > (props.categoryNumber - 1) * 5\n    );\n  };\n\n  const dailyDoublesArray = props.dailyDoubles\n    .filter((element) => {\n      return checkDailyDouble(element);\n    })\n    .map((element) => {\n      return element % 5;\n    });\n\n  const dailyDouble = (questionNumber) => {\n    if (dailyDoublesArray !== undefined) {\n      return dailyDoublesArray.some(\n        (element) => questionNumber % 5 === element\n      );\n    }\n    return false;\n  };\n\n  return (\n    <div className={classes.category}>\n      <h3>{props.category.categoryTitle}</h3>\n      <Question\n        question={props.category.answers[0]}\n        value=\"100\"\n        dailyDouble={dailyDouble(1)}\n      ></Question>\n      <Question\n        question={props.category.answers[1]}\n        value=\"200\"\n        dailyDouble={dailyDouble(2)}\n      ></Question>\n      <Question\n        question={props.category.answers[2]}\n        value=\"300\"\n        dailyDouble={dailyDouble(3)}\n      ></Question>\n      <Question\n        question={props.category.answers[3]}\n        value=\"400\"\n        dailyDouble={dailyDouble(4)}\n      ></Question>\n      <Question\n        question={props.category.answers[4]}\n        value=\"500\"\n        dailyDouble={dailyDouble(5)}\n      ></Question>\n    </div>\n  );\n}\n","export default function _readOnlyError(name) {\n  throw new TypeError(\"\\\"\" + name + \"\\\" is read-only\");\n}"],"sourceRoot":""}